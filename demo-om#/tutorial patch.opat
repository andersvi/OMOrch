
(:patch
 (:name "tutorial patch")
 (:doc "")
 (:info
  (:created "2021/03/30 9:58:56")
  (:modified "2021/03/30 10:32:22")
  (:by "om-sharp")
  (:version 1.0101))
 (:window (:size (1136 994)) (:position (141 23)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:library "om-orchidea")
   (:type :function)
   (:reference orchestrate)
   (:group-id nil)
   (:name "orchestrate")
   (:x 177)
   (:y 389)
   (:w 149)
   (:h 34)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock :eval-once)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SOUND")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ORCHESTRATION")
     (:value *default-orchestration*)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DYNAMIC")
     (:value t)
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 0))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "aux 3")
   (:x 47)
   (:y 37)
   (:w 371)
   (:h 34)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "/Users/geof/Data/samples/orchidea-db/TinySOL.spectrum.db")
   (:id 1))
  (:box
   (:type :function)
   (:reference seq)
   (:group-id nil)
   (:name "seq")
   (:x 147)
   (:y 838)
   (:w 59)
   (:h 34)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OP")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "op+")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "out") (:reactive nil))
    (:output (:name "op+1") (:reactive nil)))
   (:id 2))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 257)
   (:y 588)
   (:w 836)
   (:h 147)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size (1190 491)) (:position (42 69)))
   (:edition-params (:staff :ggff))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 25984.6)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "CHORD-SEQ")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:lmidic
        (:list
         (:list
          8490
          9301
          8099
          6400
          6000
          6000
          7905
          4799
          6400
          6400
          6400
          6000
          5698
          5698)
         (:list
          7201
          7201
          9302
          7201
          6898
          7201
          8100
          6898
          6898
          8100
          7201
          7201
          7603
          7603
          5200)
         (:list
          7098
          7098
          5202
          5898
          4395
          7098
          9503
          6401
          6401
          7098
          6401
          6401
          5098
          5898
          4395)
         (:list
          9503
          7602
          6400
          6400
          4396
          7097
          8576
          7602
          5597
          6400
          7097
          5099
          5597
          4396
          6400)
         (:list
          6402
          8099
          4799
          8099
          4799
          6402
          8490
          4799
          8099
          8099
          5998
          5998
          5694
          7201)
         (:list
          9301
          7200
          8404
          6898
          7200
          7603
          6898
          6401
          8099
          8490
          7603
          7200
          7200
          6401
          5999
          5201
          5696)
         (:list
          7099
          7402
          4999
          4698
          6200
          7402
          6800
          4698
          7402
          6800
          6200
          5894
          7099
          4698)
         (:list
          6200
          7402
          7402
          7402
          5893
          6800
          8002
          5893
          5893
          7402
          6800
          5893
          6200
          6800
          5000)
         (:list
          7603
          6401
          7603
          5201
          4794
          7603
          6401
          7603
          6000
          7603
          6000
          6401
          6000
          6000)
         (:list 7603 8100 8100 8100 7603 8100 7603 6401 4794 5203)
         (:list
          7401
          7401
          6200
          6200
          6200
          6200
          7401
          7401
          6200
          7401
          7401
          7802
          6200
          6200
          6200
          7802)
         (:list
          7402
          7805
          6199
          6199
          7402
          7402
          8100
          7805
          4999
          5398
          6600
          6600
          4999
          4999)
         (:list
          7098
          7604
          7098
          5202
          6800
          8576
          6800
          6584
          6800
          6199
          6199
          5202
          6199)
         (:list 8300 8300 7604 5201 6401 6800 6800 8004 8004 7098 4998)
         (:list
          7603
          8100
          6401
          4796
          7603
          6000
          7603
          4796
          6000
          7905
          6000
          6000
          7603
          4796)
         (:list
          9305
          7603
          8100
          6401
          7603
          7603
          8100
          9305
          9305
          5202
          7603
          8100
          4795
          4795
          6000)
         (:list 9305 4892 6801 4892 8100 5600 6100 6100 6484 6484)
         (:list
          7604
          7604
          8100
          4895
          8100
          6099
          7604
          6700
          8100
          7604
          7604
          7604
          4895
          4895
          6099
          8100)
         (:list
          7063
          7603
          7603
          5279
          8143
          6651
          5279
          6651
          4393
          6484
          4898
          4393)
         (:list
          9506
          6700
          8099
          6700
          4895
          6401
          7903
          8099
          7903
          7903
          6401
          6401
          5279
          8099
          6700)
         (:list
          6200
          6585
          6899
          7403
          6899
          7702
          7702
          6200
          4998
          6200
          4998
          4998)
         (:list 7401 7401 6500 7401 7702 7401 4998 5299 6200 8098 6500)
         (:list
          8100
          8100
          6401
          7604
          7604
          7604
          8100
          6786
          7097
          5199
          7604
          5894
          7200
          7200
          5199
          3994
          3994)
         (:list 7201 7201 7603 7201 5894 7603 7201 5999)
         (:list
          7402
          6498
          8100
          6200
          7402
          7402
          4798
          6267
          8100
          4798
          6498
          4798
          6200
          4089
          4089)
         (:list 8099 8099 7402 8099 5000 7402 6498)
         (:list
          8100
          8100
          7201
          8100
          6400
          6400
          6400
          6400
          7201
          6400
          5197
          5197
          3995
          3995)
         (:list 7201 7201 7201 8576 8490 5999 7602 7602 6400)
         (:list 8300 7402 6399 5199 6800 5895 7402 5199 6200 5199)
         (:list
          9503
          7097
          6199
          5195
          7097
          8374
          6800
          6800
          8002
          7097
          6199
          6199
          5894)
         (:list
          8100
          5198
          6401
          5999
          8100
          5699
          5699
          6401
          5198
          5699
          5699
          5699)
         (:list 6898 4798 6400 6000)))
       (:lonset
        (:list
         92.8571
         1021.66
         1904.04
         2647.07
         3436.53
         4179.57
         4969.07
         5758.53
         6501.59
         7244.63
         7987.64
         8684.26
         9473.74
         10170.3
         10913.4
         11702.8
         12678.1
         13514
         14210.6
         14953.6
         15696.7
         16486.2
         17229.2
         18018.7
         18808.1
         19551.2
         20387.1
         21176.6
         22012.5
         22848.4
         23823.7
         24984.6
         25984.6))
       (:ldur
        (:list
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000)
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000)
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000)
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000)
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list 1000 1000 1000 1000 1000 1000 1000 1000)
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list 1000 1000 1000 1000 1000 1000 1000)
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000)
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list 1000 1000 1000 1000)))
       (:lvel
        (:list
         (:list 80 80 80 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80 80 80 80 80 80 80 80 80)
         (:list 80 80 80 80)))
       (:loffset
        (:list
         (:list 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0)))
       (:lchan
        (:list
         (:list 1 2 5 6 9 10 11 13 14 15 20 21 22 23)
         (:list 1 2 3 5 7 8 9 11 12 13 14 15 18 19 20)
         (:list 5 6 7 9 10 11 12 13 14 15 18 19 20 22 23)
         (:list 1 2 7 8 9 10 11 13 14 15 18 20 21 22 23)
         (:list 5 6 7 8 9 10 11 13 14 16 20 21 22 23)
         (:list 1 2 3 5 6 7 8 9 10 11 12 16 17 18 19 20 22)
         (:list 5 6 7 9 10 11 13 14 15 16 20 21 22 23)
         (:list 5 7 8 9 10 11 13 14 15 16 18 20 21 22 23)
         (:list 1 5 6 7 8 9 10 11 13 14 15 20 21 22)
         (:list 1 5 7 9 10 11 15 18 22 23)
         (:list 1 5 7 8 9 10 11 12 13 15 16 18 19 20 21 22)
         (:list 1 3 5 6 7 9 11 12 13 14 18 20 22 23)
         (:list 1 5 6 7 8 9 10 11 13 15 20 21 22)
         (:list 1 5 7 8 9 11 12 13 14 15 20)
         (:list 5 6 7 8 9 10 11 13 15 18 20 21 22 23)
         (:list 1 2 5 6 7 8 9 11 12 13 15 18 20 22 23)
         (:list 5 9 11 13 14 15 18 20 22 23)
         (:list 1 2 5 7 8 9 10 11 13 14 15 18 20 21 22 23)
         (:list 1 7 8 9 10 11 13 14 15 20 22 23)
         (:list 1 5 6 7 8 9 11 12 13 14 15 18 20 22 23)
         (:list 5 6 7 8 9 11 13 14 20 21 22 23)
         (:list 1 2 5 6 7 9 10 13 15 16 20)
         (:list 1 2 5 7 8 9 10 11 12 13 14 15 16 17 20 22 23)
         (:list 1 5 9 11 13 15 18 20)
         (:list 1 5 6 7 8 9 10 13 14 15 18 20 21 22 23)
         (:list 1 2 5 11 13 15 18)
         (:list 5 6 7 8 9 10 13 15 16 18 20 21 22 23)
         (:list 1 2 9 11 12 13 14 15 18)
         (:list 1 5 6 7 8 9 10 13 14 15)
         (:list 1 5 7 9 10 11 12 13 14 15 20 21 22)
         (:list 1 7 9 10 11 13 15 18 20 21 22 23)
         (:list 7 13 15 20)))
       (:lport
        (:list
         (:list
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil)
         (:list
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil)
         (:list
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil)
         (:list
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil)
         (:list
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil)
         (:list
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil)
         (:list
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil)
         (:list
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil)
         (:list
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil)
         (:list nil nil nil nil nil nil nil nil nil nil)
         (:list
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil)
         (:list
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil)
         (:list nil nil nil nil nil nil nil nil nil nil nil nil nil)
         (:list nil nil nil nil nil nil nil nil nil nil nil)
         (:list
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil)
         (:list
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil)
         (:list nil nil nil nil nil nil nil nil nil nil)
         (:list
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil)
         (:list nil nil nil nil nil nil nil nil nil nil nil nil)
         (:list
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil)
         (:list nil nil nil nil nil nil nil nil nil nil nil nil)
         (:list nil nil nil nil nil nil nil nil nil nil nil)
         (:list
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil)
         (:list nil nil nil nil nil nil nil nil)
         (:list
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil)
         (:list nil nil nil nil nil nil nil)
         (:list
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil)
         (:list nil nil nil nil nil nil nil nil nil)
         (:list nil nil nil nil nil nil nil nil nil nil)
         (:list nil nil nil nil nil nil nil nil nil nil nil nil nil)
         (:list nil nil nil nil nil nil nil nil nil nil nil nil)
         (:list nil nil nil nil)))
       (:llegato nil)))))
   (:id 3))
  (:comment
   (:x 386)
   (:y 824)
   (:w 313)
   (:h 113)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "3. evaluate this sequence object to get both the sound file and the chord-seq (NB. chord-seq not yet implemented!)

Also NB: the orchestrate method should have eval-once enabled so it doesn't do the calculation twice")
   (:id 4))
  (:comment
   (:x 453)
   (:y 2)
   (:w 308)
   (:h 98)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "1. evaluate this. You have to choose the db file which ends with '.spectrum.db', such as 'TinySOL.spectrum.db'

restrictions: The folder containing the sound files must be adjacent to this database file.")
   (:id 5))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "aux")
   (:x 597)
   (:y 160)
   (:w 182)
   (:h 72)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "Fl Fl Fl Fl Fl Fl")
   (:id 6))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name "A_minor-orch-96078700.wav")
   (:x 43)
   (:y 539)
   (:w 195)
   (:h 93)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "markers")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "markers") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 32121.862)
       (:n-samples 1416574)
       (:n-channels 2)
       (:sample-rate 44100)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname
        (:pathname
         (:directory
          (:relative
           :up
           :up
           :up
           :up
           :up
           "Documents"
           "OM#"
           "temp-files"))
         (:device :unspecific)
         (:host :unspecific)
         (:name "A_minor-orch-80057719")
         (:type "wav")))))))
   (:id 7))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "aux")
   (:x 277)
   (:y 165)
   (:w 264)
   (:h 98)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    "Fl Fl Ob Ob ClBb ClBb Bn Bn Hn Hn TpC TpC Tbn Tbn BTb Vn Vn Va Va Vc Vc Cb Cb")
   (:id 8))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name "A_minor.wav")
   (:x 11)
   (:y 180)
   (:w 186)
   (:h 96)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "markers")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "markers") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 29315.555)
       (:n-samples 1292816)
       (:n-channels 2)
       (:sample-rate 44100)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname
        (:pathname
         (:directory
          (:relative :up "demo-ws" "in-files" "demo sounds"))
         (:device :unspecific)
         (:host :unspecific)
         (:name "A_minor")
         (:type "wav")))))))
   (:id 9))
  (:box
   (:type :function)
   (:reference set-db-file)
   (:group-id nil)
   (:name "set-db-file")
   (:x 253)
   (:y 98)
   (:w 95)
   (:h 34)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PATH")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 0 :out 1)) (:to (:box 3 :in 0)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 10 :in 0)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 1)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 2 :in 0)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 0 :in 1)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 0 :in 0)))))