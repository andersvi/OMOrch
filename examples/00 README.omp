; OM File Header - Saved 2024/02/15 15:48:42
; (7.04 :patc (om-make-point 83 29) (om-make-point 1068 63) (om-make-point 848 1095) "" 183 0 nil "2024/02/15 15:48:42")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "00 README" (quote ((let ((box (om-load-boxcomment "comment" (om-make-point 484 918) (quote "# OMOrch$$Yet-Another-OM-Orchxx-lib!  (YAOMO!)$$An OpenMusic-lib to call and use output from Carmine-Emanuele Cella$\"Orchidea\" orchestration tool: https://http://www.orch-idea.org/$$Inspired by \"OM-Orchidea\" by Geof Holbrook and \"OM-Orchidee\" by Jean$Bresson.$$**Installation**$$Unpack the compressed library, and move it to a place where OM looks$for libraries (set in your Preferences).  You will probably need to$rename the extracted folder - OMOrch-v.xx to just OMOrch.$$The lib currently relies on a CLI-version of 'orchestrate' from$Carmine's Orchidea-software.$$A precompiled version for Linux is included inside the 'resources/'$folder (together with the other cli-tools used by Orchidea)$$**SOL database**$$You will also need a compatible sample-dataset to work with Orchidea,$fex.  \"FullSOL\" or \"TinySOL\":$https://forum.ircam.fr/projects/detail/fullsol/$$**Tutorials**$$Tutorials are available at the usual place after the lib is loaded:$\"Help->Import Tutorial Patches->Libraries->OMOrch\".$$**Development**$$Sources are available at https://github.com/andersvi/OMOrch$$OMOrch is very much under development, and has a rather large$TODO-list.  If you discover bugs or have suggestions or good$solutions, please set up a note at the \"Discussions\" tab at the$git-repo:$$  https://github.com/andersvi/OMOrch/discussions$$When reporting bugs please try to provide a precise step-by-step$explanation together with a MWE: an empty new workspace containing$only the necessary patches and resources to trigger the bug.$$Anders Vinjar, 2024$") nil (om-make-point 126 60) nil (om-make-color 0 0 0) (om-make-font "Liberation Sans" 14.666666666666666D0 :family "Liberation Sans" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote nil) nil 7.04))