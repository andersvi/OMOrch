; OM File Header - Saved 2023/11/16 11:03:26
; (7.04 :patc (om-make-point 19 59) (om-make-point 0 0) (om-make-point 1288 906) "" 183 0 "2023/09/29 14:13:38" "2023/11/16 11:03:26")
; End File Header
(in-package :om)(load-lib-for (quote ("OMOrch")))(setf *om-current-persistent* (om-load-patch1 "init orchidea  paths and globals" (quote ((let ((box (om-load-boxcomment "comment 5" (om-make-point 708 196) (quote "Various default values, check OMOrchs preferences  pane:$$  *orchidea-executable-path*		\"resources/bin/orchestrate\"$  *orchidea-config-template-path*	\"resources/bin/config_template.txt\"$$  *orchidea-db-file*				path to *.spectrum.db file inside folder of FullSOL, TinySOL, or any other orchidea-compat db$  *orchidea-sound-path*			nil (derived from *orchidea-db-file*)$$$  *orchidea-default-ensemble*		\"Fl Fl Ob Ob ClBb ClBb Bn Bn Hn Hn TpC TpC Tbn Tbn BTb Vn Vn Va Va Vc Vc Cb Cb\"$$  *orch-extras-assoc-list*			((styles . t) (dynamics . t))$") nil (om-make-point 116 597) nil (om-make-color 0.43785763 0.29527733 0.0) (om-make-font "Liberation Sans" 12 :family "Liberation Sans" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 350 76) (quote "Better set these in OMOrchs preferences pane. $If you're lucky some sensible  defaults$are provided set semi-automatically") "" (om-make-point 657 196) nil (om-make-color 0 0 0) (om-make-font "Liberation Sans" 16.0D0 :family "Liberation Sans" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 467 308) (om-make-point 369 30) (quote /path/to/my/om_libs/omorch/resources/bin/dynamic_orchestration.txt) "/path/to/my/OM_LIBS/OMOrch/resources/bin/dynamic_orchestration.txt" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 773 378) (om-make-point 299 30) (quote /path/to/my/om_libs/omorch/resources/bin/orchestrate) "/path/to/my/OM_LIBS/OMOrch/resources/bin/orchestrate" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 4" (om-make-point 231 28) (quote "Path to a valid orchidea config-template") nil (om-make-point 560 283) nil (om-make-color 0 0 0) (om-make-font "Liberation Sans" 12 :family "Liberation Sans" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 4" (om-make-point 155 28) (quote "Path to orchestrate binary") nil (om-make-point 851 337) nil (om-make-color 0 0 0) (om-make-font "Liberation Sans" 12 :family "Liberation Sans" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 3" (om-make-point 624 28) (quote "Path to \"YOUR_DB.spectrum.db\", ie \"/home/user/ORCHIDEA/_FullSOL2020_release/FullSOL2020.spectrum.db\"") nil (om-make-point 35 134) nil (om-make-color 0 0 0) (om-make-font "Liberation Sans" 12 :family "Liberation Sans" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ORCHIDEA-SET-EXECUTABLE-PATH" (quote orchidea-set-executable-path) (quote ((om-load-inputfun (quote input-funbox) "path to orchestrate binary" "PATH" "/home/andersvi/site/OM/ORCHIDEA/OM_ORCHIDEA_LIB/OMOrch/resources/bin/orchestrate"))) (om-make-point 832 406) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 341 76) (quote "Also available in OMOrchs preferences pane, $w some defaults set semi-automatically using$this ws's 'resources'-folder") "" (om-make-point 220 31) nil (om-make-color 0 0 0) (om-make-font "Liberation Sans" 16.0D0 :family "Liberation Sans" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ORCHIDEA-SET-CONFIG-TEMPLATE 2" (quote orchidea-set-config-template) (quote ((om-load-inputfun (quote input-funbox) "path to orchidea config template file" "PATH" "/home/andersvi/site/OM/ORCHIDEA/OM_ORCHIDEA_LIB/OMOrch/resources/bin/config_template.txt"))) (om-make-point 576 351) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ORCHIDEA-SET-DB-FILE-AND-SOUND-PATH" (quote orchidea-set-db-file-and-sound-path) (quote ((om-load-inputfun (quote input-funbox) "path to .spectrum.db file" "PATH" nil))) (om-make-point 131 276) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 5" (quote list) (quote nil) (om-make-point 32 225) (om-make-point 384 30) "/PATH/TO/ORCHIDEA/_FullSOL2020_release/FullSOL2020.spectrum.db" "\"/PATH/TO/ORCHIDEA/_FullSOL2020_release/FullSOL2020.spectrum.db\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LIST 4" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote a)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote b)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote c)))) (om-make-point 146 509) (om-make-point 296 43) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((3 0 7 0 nil 0) (2 0 9 0 nil 0) (11 0 10 0 nil 0) (10 0 12 0 nil 0) (9 0 12 1 nil 0) (7 0 12 2 nil 0))) nil 7.04))
