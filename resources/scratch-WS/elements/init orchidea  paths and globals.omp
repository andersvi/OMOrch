; OM File Header - Saved 2023/11/08 11:45:07
; (7.04 :patc (om-make-point 17 65) (om-make-point 0 0) (om-make-point 1288 933) "" 183 0 "2023/09/29 14:13:38" "2023/11/08 11:42:30")
; End File Header
(in-package :om)(load-lib-for (quote ("OMOrch")))(setf *om-current-persistent* (om-load-patch1 "init orchidea  paths and globals" (quote ((let ((box (om-load-boxcall (quote genfun) "ORCHIDEA-SET-EXECUTABLE-PATH" (quote orchidea-set-executable-path) (quote ((om-load-inputfun (quote input-funbox) "path to orchestrate binary" "PATH" "/home/andersvi/site/OM/ORCHIDEA/OM_ORCHIDEA_LIB/OMOrch/resources/bin/orchestrate"))) (om-make-point 439 370) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 2" (om-make-point 684 196) (quote "various default values:$$   *orchidea-executable-path*		\"resources/bin/orchestrate\"$   *orchidea-config-template-path*	\"resources/bin/config_template.txt\"$$   *orchidea-db-file*			path to *.spectrum.db file inside folder of FullSOL, TinySOL, or any other orchidea-compat db$   *orchidea-sound-path*		nil (derived from *orchidea-db-file*)$$$  *orchidea-default-ensemble*  \"Fl Fl Ob Ob ClBb ClBb Bn Bn Hn Hn TpC TpC Tbn Tbn BTb Vn Vn Va Va Vc Vc Cb Cb\"$$  *orch-draw-extras*		(orch-add-style-text orch-add-dynamic-sign)$") "" (om-make-point 103 576) nil (om-make-color 0 0 0) (om-make-font "Liberation Sans" 12 :family "Liberation Sans" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 146 57) (quote "TODO: set in prefs$") "" (om-make-point 257 40) nil (om-make-color 0 0 0) (om-make-font "Liberation Sans" 16.0D0 :family "Liberation Sans" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 782 313) (om-make-point 121 30) (list (quote orch-add-style-text)) "(orch-add-style-text)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 683 346) (om-make-point 237 30) (list (quote orch-add-style-text) (quote orch-add-dynamic-sign)) "(orch-add-style-text orch-add-dynamic-sign)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ORCH-SET-EXTRAS 3" (quote orch-set-extras) (quote ((om-load-inputfun (quote input-funbox) "list of functions drawing relevant 'extras' to orch-notes" "EXTRAS" nil))) (om-make-point 710 399) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 254 194) (om-make-point 487 30) "/home/andersvi/site/OM/ORCHIDEA/OM_ORCHIDEA_LIB/OMOrch/resources/bin/orchestrate" "\"/home/andersvi/site/OM/ORCHIDEA/OM_ORCHIDEA_LIB/OMOrch/resources/bin/orchestrate\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 134 247) (om-make-point 522 30) "/home/andersvi/site/OM/ORCHIDEA/OM_ORCHIDEA_LIB/OMOrch/resources/bin/config_template.txt" "\"/home/andersvi/site/OM/ORCHIDEA/OM_ORCHIDEA_LIB/OMOrch/resources/bin/config_template.txt\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ORCHIDEA-SET-CONFIG-TEMPLATE 2" (quote orchidea-set-config-template) (quote ((om-load-inputfun (quote input-funbox) "path to orchidea config template file" "PATH" "/home/andersvi/site/OM/ORCHIDEA/OM_ORCHIDEA_LIB/OMOrch/resources/bin/config_template.txt"))) (om-make-point 266 284) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ORCHIDEA-SET-DB-FILE-AND-SOUND-PATH" (quote orchidea-set-db-file-and-sound-path) (quote ((om-load-inputfun (quote input-funbox) "path to .spectrum.db file" "PATH" nil))) (om-make-point 46 276) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 5" (quote list) (quote nil) (om-make-point 18 125) (om-make-point 449 30) "/home/andersvi/site/OM/ORCHIDEA/_FullSOL2020_release/FullSOL2020.spectrum.db" "\"/home/andersvi/site/OM/ORCHIDEA/_FullSOL2020_release/FullSOL2020.spectrum.db\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LIST 4" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote a)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote b)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote c)))) (om-make-point 146 509) (om-make-point 296 43) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((6 0 0 0 nil 0) (4 0 5 0 nil 0) (7 0 8 0 nil 0) (10 0 9 0 nil 0) (9 0 11 0 nil 0) (8 0 11 1 nil 0) (0 0 11 2 nil 0))) nil 7.04))
