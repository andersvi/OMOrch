; OM File Header - Saved 2023/11/08 10:22:08
; (7.04 :patc (om-make-point 37 128) (om-make-point 0 0) (om-make-point 1650 925) "" 183 0 "2023/10/18 21:54:03" "2023/11/08 10:18:14")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "extra-objects to draw in score" (quote ((let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 1034 459) (om-make-point 38 30) (quote :mp) ":mp" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHORD-SEQ 2" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 1000)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 899 276) (om-make-point 250 127) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000) (6000) (6000))) :lonset (quote (0 1000 2000 3000)) :ldur (quote ((1000) (1000) (1000))) :lvel (quote ((60) (85) (127))) :loffset (quote ((0) (0) (0))) :lchan (quote ((1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((nil) (nil) (nil)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote (((0 0) (if (find-class (quote text-extra) nil) (make-instance (quote text-extra) :deltax 0 :deltay 0 :thetext "pizz" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics (quote :mp) :from-file t))) ((1 0) (if (find-class (quote text-extra) nil) (make-instance (quote text-extra) :deltax 0 :deltay 0 :thetext "legno" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics (quote :mf) :from-file t))) ((2 0) (if (find-class (quote text-extra) nil) (make-instance (quote text-extra) :deltax 0 :deltay 0 :thetext "pizz" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics (quote :fff) :from-file t)))))) (set-patch-pairs newobj (quote ((nil (om-load-patch-abs1 "patch" (quote nil) (quote nil) 7.04 nil "" (om-make-point 200 200) (om-make-point 400 500)))))) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (measure onset scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list 1 0 nil (quote t) (quote :normal) 0 0 (om-make-point 0 0) (om-make-point 1025 552) 0 1000 nil 121/100 (quote :midi-player) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 28 2)) t nil nil nil (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (let ((newbox (om-load-boxcall (quote lispfun) "TEST-CS" (quote test-cs) (quote nil) (om-make-point 941 176) nil nil nil nil))) (setf (frame-position newbox) (om-make-point 941 176)) newbox))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "INSPECT" (quote inspect) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 786 689) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 62 401) (om-make-point 38 30) (quote aaa) "aaa" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "SETQ-SYMBOL" (quote setq-symbol) (quote ((om-load-inputfun (quote input-funbox) "SYMBOL" "SYMBOL" (quote aaa)) (om-load-inputfun (quote input-funbox) "DATA" "DATA" nil))) (om-make-point 44 431) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ADD-EXTRA-LIST" (quote add-extra-list) (quote ((om-load-inputfun (quote input-funbox) "a musical object" "SELF" nil) (om-load-inputfun (quote input-funbox) "a list of extra objects" "EXTRAS" nil) (om-load-inputfunmenu1 (quote input-funmenu) "insert mode" "MODE" "exact" (list (list "  loop" "loop") (list "  last" "last") (list "> exact" "exact"))))) (om-make-point 454 558) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHORD" (quote chord) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (list of midicents)" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "velocities (list of values 0-127)" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (list of values in ms)" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "durations (list of values in ms)" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "MIDI channels (list of values 0-16)" "lchan" (list 1)))) (om-make-point 662 126) (om-make-point 103 220) (let ((thechord (make-instance (quote chord) :lmidic (quote (6000 9400 4000 2200)) :ldur (quote (1000 1000 1000 1000)) :lvel (quote (100 100 100 100)) :loffset (quote (0 0 0 0)) :lchan (quote (1 1 1 1))))) (load-port-info thechord (quote (0 0 0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote (((0) (if (find-class (quote text-extra) nil) (make-instance (quote text-extra) :deltax 0 :deltay -5 :thetext "pizz" :from-file t))) ((1) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "b" :from-file t))) ((2) (if (find-class (quote char-extra) nil) (make-instance (quote char-extra) :deltax 0 :deltay 0 :thechar "F" :from-file t))) ((3) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics (quote :f) :from-file t)))))) (set-tonalite thechord nil) thechord) "x" nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale onset measure)) (list 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :midi-player) 1 nil 1000 0 (om-make-point 615 613) (om-make-point 0 0) 0 0 (quote :normal) (quote t) nil nil nil)) t nil nil nil (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CERCLE-EXTRA" (quote cercle-extra) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "horizontal offset" "deltax" 0) (om-load-inputfun (quote input-funbox) "vertical offset" "deltay" 0))) (om-make-point 1294 563) (om-make-point 70 50) (let ((copy (if (find-class (quote cercle-extra) nil) (make-instance (quote cercle-extra) :deltax 0 :deltay 0 :from-file t)))) (setf (p-points copy) nil) (setf (gparams copy) nil) copy) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) nil nil nil t (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "RECT-EXTRA" (quote rect-extra) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "horizontal offset" "deltax" 0) (om-load-inputfun (quote input-funbox) "vertical offset" "deltay" 0))) (om-make-point 1292 480) (om-make-point 70 50) (let ((copy (if (find-class (quote rect-extra) nil) (make-instance (quote rect-extra) :deltax 0 :deltay 0 :from-file t)))) (setf (p-points copy) nil) (setf (gparams copy) nil) copy) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) nil nil nil t (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "ARROW-EXTRA" (quote arrow-extra) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "horizontal offset" "deltax" 0) (om-load-inputfun (quote input-funbox) "vertical offset" "deltay" 0))) (om-make-point 1134 503) (om-make-point 70 50) (let ((copy (if (find-class (quote arrow-extra) nil) (make-instance (quote arrow-extra) :deltax 0 :deltay 0 :from-file t)))) (setf (p-points copy) nil) (setf (gparams copy) nil) copy) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) nil nil nil t (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "LINE-EXTRA" (quote line-extra) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "horizontal offset" "deltax" 0) (om-load-inputfun (quote input-funbox) "vertical offset" "deltay" 0))) (om-make-point 1097 436) (om-make-point 70 50) (let ((copy (if (find-class (quote line-extra) nil) (make-instance (quote line-extra) :deltax 0 :deltay 0 :from-file t)))) (setf (p-points copy) nil) (setf (gparams copy) nil) copy) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) nil nil nil t (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "VEL-EXTRA" (quote vel-extra) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "horizontal offset" "deltax" 0) (om-load-inputfun (quote input-funbox) "vertical offset" "deltay" 0) (om-load-inputfunmenu1 (quote input-funmenu) "dynamics character" "dynamics" (quote :mp) (list (list "  unspecific" nil) (list "  fff" (quote :fff)) (list "  ff" (quote :ff)) (list "  f" (quote :f)) (list "  mf" (quote :mf)) (list "> mp" (quote :mp)) (list "  ppp" (quote :ppp)) (list "  pp" (quote :pp)) (list "  p" (quote :p)))))) (om-make-point 938 533) (om-make-point 70 50) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics (quote :fff) :from-file t)) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) nil nil nil t (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 6" (quote t) (quote nil) (om-make-point 656 433) (om-make-point 30 30) -5 "-5" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 5" (quote t) (quote nil) (om-make-point 796 465) (om-make-point 34 30) "a" "\"a\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LIST 2" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote a)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote b)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote c)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" (quote d)) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 614 640) (om-make-point 131 43) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 895 483) (om-make-point 36 30) "D" "\"D\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHAR-EXTRA" (quote char-extra) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "horizontal offset" "deltax" 0) (om-load-inputfun (quote input-funbox) "vertical offset" "deltay" 0) (om-load-inputfun (quote input-funbox) "" "thechar" "n"))) (om-make-point 845 515) (om-make-point 70 50) (if (find-class (quote char-extra) nil) (make-instance (quote char-extra) :deltax 0 :deltay 0 :thechar "D" :from-file t)) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) nil nil nil t (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "HEAD-EXTRA" (quote head-extra) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfunmenu1 (quote input-funmenu) "head figure" "thehead" "a" (list (list "  whole" (list (quote head-1))) (list "  half" (list (quote head-1/2))) (list "  quarter" (list (quote head-1/4))) (list "  1/4harm" (list (quote head-1/4harm))) (list "> 1/2harm" (list (quote head-1/2harm))) (list "  1/4sq" (list (quote head-1/4sq))) (list "  1/2sq" (list (quote head-1/2sq))) (list "  1/4circ" (list (quote head-1/4circ))) (list "  1/2circ" (list (quote head-1/2circ))) (list "  1/4tri" (list (quote head-1/4tri))) (list "  1/2tri" (list (quote head-1/2tri))) (list "  cross" (list (quote head-cross))))))) (om-make-point 754 495) (om-make-point 70 50) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "a" :from-file t)) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) nil nil nil t (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 678 456) (om-make-point 48 30) "pizz" "\"pizz\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "TEXT-EXTRA" (quote text-extra) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "horizontal offset" "deltax" 0) (om-load-inputfun (quote input-funbox) "vertical offset" "deltay" 0) (om-load-inputfun (quote input-funbox) "text (string)" "thetext" "text"))) (om-make-point 626 486) (om-make-point 70 50) (if (find-class (quote text-extra) nil) (make-instance (quote text-extra) :deltax 0 :deltay -5 :thetext "pizz" :from-file t)) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 0 0) (om-make-point 556 277))) nil nil nil t (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "REMOVE-EXTRAS" (quote remove-extras) (quote ((om-load-inputfun (quote input-funbox) "a musical object" "SELF" nil))) (om-make-point 189 577) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "GET-EXTRAS" (quote get-extras) (quote ((om-load-inputfun (quote input-funbox) "a musical object" "SELF" nil) (om-load-inputfunmenu1 (quote input-funmenu) "type of extra" "FILTER" "all" (list (list "all" "all") (list "head" "head") (list "vel" "vel") (list "char" "char") (list "text" "text") (list "pict" "pict") (list "line" "line"))))) (om-make-point 66 521) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ADD-EXTRA-LIST" (quote add-extra-list) (quote ((om-load-inputfun (quote input-funbox) "a musical object" "SELF" nil) (om-load-inputfun (quote input-funbox) "a list of extra objects" "EXTRAS" nil) (om-load-inputfunmenu1 (quote input-funmenu) "insert mode" "MODE" "exact" (list (list "  loop" "loop") (list "  last" "last") (list "> exact" "exact"))))) (om-make-point 282 639) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ADD-EXTRA" (quote add-extra) (quote ((om-load-inputfun (quote input-funbox) "a musical object" "SELF" nil) (om-load-inputfun (quote input-funbox) "a extra or list of extra objects" "EXTRAS" nil) (om-load-inputfun (quote input-funbox) "target path in object" "PATH" nil))) (om-make-point 67 620) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHORD-SEQ" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 1000)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 243 351) (om-make-point 354 95) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8000) (7150) (7900) (8700) (7900) (7600) (8400) (7200) (7300) (7700) (7500) (7400))) :lonset (quote (0 789 929 1207 1858 2786 3065 3483 3513 3854 4272 4690 5230)) :ldur (quote ((789) (139) (279) (650) (929) (279) (418) (372) (1000) (418) (418) (540))) :lvel (quote ((85) (115) (85) (127) (85) (85) (40) (115) (100) (115) (115) (85))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (0) (nil) (nil) (nil)))) (init-mus-color newobj (quote (((7 0) (om-make-color 0.91068894 0.16995499 0.16995499))))) (set-extra-pairs newobj (quote (((0) (if (find-class (quote text-extra) nil) (make-instance (quote text-extra) :deltax 0 :deltay -5 :thetext "pizz" :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "a" :from-file t))) ((2) (if (find-class (quote char-extra) nil) (make-instance (quote char-extra) :deltax 0 :deltay 0 :thechar "D" :from-file t))) ((3) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics (quote :fff) :from-file t)))))) (set-patch-pairs newobj (quote ((nil (om-load-patch-abs1 "patch" (quote nil) (quote nil) 7.04 nil "" (om-make-point 200 200) (om-make-point 400 500)))))) (set-name newobj nil) (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (measure onset scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list 1 0 nil (quote t) (quote :normal) 0 0 (om-make-point 0 0) (om-make-point 896 773) 0 1000 nil 17/10 (quote :midi-player) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 6) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 24 2)) t nil nil t (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "FIRST" (quote first) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 361 232) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 152 42) (quote "multi-seq with orch-notes$") "" (om-make-point 488 86) nil (om-make-color 0 0 0) (om-make-font "Liberation Sans" 12 :family "Liberation Sans" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ 3" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 199 69) (om-make-point 250 123) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8000) (7150) (7900) (8700) (7900) (7600) (8400) (7200) (7700) (7500) (7400))) :lonset (quote (0 789 929 1207 1858 2786 3065 3483 3854 4272 4690 5230)) :ldur (quote ((789) (139) (279) (650) (929) (279) (418) (372) (418) (418) (540))) :lvel (quote ((85) (115) (85) (40) (85) (85) (40) (115) (115) (115) (85))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote (((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t)))))) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7750) (7500) (8700) (7500) (7900) (7750) (10550) (7800) (8000) (7500))) :lonset (quote (0 511 929 1207 1858 2276 3065 3854 4272 4690 5230)) :ldur (quote ((511) (279) (279) (650) (418) (511) (418) (418) (418) (540))) :lvel (quote ((85) (115) (115) (85) (40) (85) (40) (85) (40) (40))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote (((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t)))))) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7750) (7200) (7750) (7400) (7100) (7400) (7400) (10350) (10350))) :lonset (quote (789 929 1207 1858 2276 2786 3483 3854 4272 4690)) :ldur (quote ((139) (279) (650) (418) (511) (279) (372) (418) (418))) :lvel (quote ((100) (0) (85) (100) (0) (100) (85) (40) (40))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote (((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t)))))) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7300))) :lonset (quote (2276 2787)) :ldur (quote ((511))) :lvel (quote ((85))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((nil)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote (((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t)))))) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7950) (8700) (8000) (7400) (8700) (7800) (8450) (7800) (7800))) :lonset (quote (0 511 1207 2276 3065 3483 3854 4272 4690 5230)) :ldur (quote ((511) (279) (650) (789) (418) (372) (418) (418) (540))) :lvel (quote ((85) (85) (100) (85) (85) (115) (40) (100) (85))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)))) (init-mus-color newobj (quote (((4 0) (om-make-color 1.0 0.0 0.0))))) (set-extra-pairs newobj (quote (((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t)))))) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7800) (7200) (7950) (7200) (7800) (7200))) :lonset (quote (511 1207 2276 2786 3483 4690 5230)) :ldur (quote ((418) (1068) (511) (279) (372) (540))) :lvel (quote ((40) (85) (40) (115) (85) (40))) :loffset (quote ((0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((nil) (nil) (nil) (nil) (nil) (nil)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote (((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t)))))) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((4900) (6800) (7100) (5100) (5000) (5600) (5000) (5600) (7200) (5350) (5500) (5400))) :lonset (quote (0 511 789 929 1207 1858 2276 2786 3065 3483 3854 4272 5230)) :ldur (quote ((511) (279) (139) (279) (650) (418) (511) (279) (418) (372) (418) (958))) :lvel (quote ((85) (40) (85) (115) (85) (85) (115) (115) (85) (115) (85) (85))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote (((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t)))))) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7200) (6500) (5300) (5600) (7200) (8700) (7150) (6500) (7200) (5200) (5600) (6500))) :lonset (quote (511 789 929 1207 1858 2276 2786 3065 3483 3854 4272 4690 5230)) :ldur (quote ((279) (139) (279) (650) (418) (511) (279) (418) (372) (418) (418) (540))) :lvel (quote ((115) (85) (40) (40) (100) (40) (40) (85) (40) (85) (85) (100))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote (((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t)))))) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7700) (6500) (7800) (8700) (5400) (7800) (6700) (7500) (5600) (7200) (7200) (7800))) :lonset (quote (0 511 789 929 1207 1858 2276 2786 3065 3483 3854 4690 5230)) :ldur (quote ((511) (279) (139) (279) (650) (418) (511) (279) (418) (372) (836) (540))) :lvel (quote ((85) (100) (85) (85) (85) (40) (100) (85) (85) (85) (40) (85))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote (((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t)))))) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5600) (5900) (7400) (6000) (7400) (7200) (7100) (7800) (7500) (7700) (6000))) :lonset (quote (0 789 929 1207 1858 2276 2786 3065 3483 4272 4690 5230)) :ldur (quote ((789) (139) (279) (650) (418) (511) (279) (418) (372) (418) (540))) :lvel (quote ((115) (85) (85) (40) (115) (85) (85) (40) (115) (115) (85))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote (((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t)))))) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000) (9000) (6900) (9800) (8200) (7600) (7400))) :lonset (quote (0 789 1858 2786 3483 3854 4272 4690)) :ldur (quote ((511) (139) (418) (279) (372) (418) (418))) :lvel (quote ((85) (85) (40) (40) (40) (40) (85))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((nil) (nil) (nil) (nil) (nil) (nil) (nil)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote (((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t)))))) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7200))) :lonset (quote (4272 4690)) :ldur (quote ((418))) :lvel (quote ((85))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((nil)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote (((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t)))))) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6500) (5900) (6800) (8700) (7700) (5000) (8000) (7600) (8000) (7800) (8000))) :lonset (quote (0 511 789 929 1207 1858 2276 2786 3065 4272 4690 5230)) :ldur (quote ((511) (279) (139) (279) (650) (418) (511) (279) (1207) (418) (540))) :lvel (quote ((40) (85) (40) (100) (85) (100) (40) (40) (85) (40) (85))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote (((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t)))))) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5000) (8000) (6600) (7800) (7200) (7800) (4900) (5200) (6800) (7200))) :lonset (quote (0 511 929 1207 1858 2276 3065 3483 3854 4690 5230)) :ldur (quote ((511) (279) (279) (650) (418) (511) (418) (372) (418) (540))) :lvel (quote ((40) (85) (115) (40) (115) (100) (40) (40) (100) (85))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote (((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t)))))) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000) (4200) (7200) (5300) (6800) (7700) (5000) (5100) (5600) (5250) (5900) (7200) (4600))) :lonset (quote (0 511 789 929 1207 1858 2276 2786 3065 3483 3854 4272 4690 5230)) :ldur (quote ((511) (279) (139) (279) (650) (418) (511) (279) (418) (372) (418) (418) (540))) :lvel (quote ((40) (85) (115) (115) (100) (85) (100) (40) (115) (85) (100) (40) (85))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote (((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t)))))) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7200) (8400) (6700) (7800) (10000) (7700) (8000) (7600) (7700) (8100) (7700) (7800) (7400))) :lonset (quote (0 511 789 929 1207 1858 2276 2786 3065 3483 3854 4272 4690 5230)) :ldur (quote ((511) (279) (139) (279) (650) (418) (511) (279) (418) (372) (418) (418) (540))) :lvel (quote ((85) (85) (85) (85) (100) (115) (85) (85) (85) (40) (115) (85) (85))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote (((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t)))))) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7500) (3300) (7700) (10400) (7100) (9700))) :lonset (quote (511 1207 1858 3483 4272 4690 5230)) :ldur (quote ((279) (650) (929) (372) (418) (540))) :lvel (quote ((115) (0) (115) (85) (115) (40))) :loffset (quote ((0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((nil) (nil) (nil) (nil) (nil) (nil)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote (((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t)))))) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7800) (7700) (6500) (8100) (8600) (7600) (8400) (7200) (8600) (6300) (6000) (6000))) :lonset (quote (511 789 929 1207 1858 2276 2786 3065 3483 3854 4272 4690 5230)) :ldur (quote ((279) (139) (279) (650) (418) (511) (279) (418) (372) (418) (418) (540))) :lvel (quote ((85) (115) (115) (85) (40) (115) (115) (85) (115) (85) (40) (85))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote (((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t)))))) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7500) (8100) (8500) (7400) (7500) (7700) (8000) (7200))) :lonset (quote (511 789 929 1207 2276 2786 3483 4272 4690)) :ldur (quote ((279) (139) (279) (650) (511) (279) (372) (418))) :lvel (quote ((85) (85) (85) (85) (115) (40) (85) (85))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote (((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t)))))) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6500) (6000) (7700) (6500) (7500) (7200) (3300) (6000) (6500) (7600) (6400) (7700))) :lonset (quote (0 511 789 1207 1858 2276 2786 3065 3483 3854 4272 4690 5230)) :ldur (quote ((511) (279) (418) (650) (418) (511) (279) (418) (372) (418) (418) (540))) :lvel (quote ((85) (85) (85) (115) (115) (85) (0) (85) (115) (85) (40) (115))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote (((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t)))))) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5900) (7500) (8000) (6800) (8600) (6000) (7200) (5800) (5900) (6100) (7700) (6000))) :lonset (quote (0 789 929 1207 1858 2276 2786 3065 3483 3854 4272 4690 5230)) :ldur (quote ((511) (139) (279) (650) (418) (511) (279) (418) (372) (418) (418) (540))) :lvel (quote ((100) (115) (85) (85) (85) (115) (115) (85) (85) (85) (40) (115))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote (((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t)))))) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7200) (7100) (7200) (7200) (3300) (3300) (7200) (4300) (7200) (8400))) :lonset (quote (0 511 789 929 1207 1858 2276 2786 3065 4690 5230)) :ldur (quote ((511) (279) (139) (279) (650) (418) (511) (279) (1207) (540))) :lvel (quote ((85) (100) (115) (115) (0) (0) (85) (85) (85) (85))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote (((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t)))))) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6500) (6000) (4300) (7400) (3300))) :lonset (quote (0 1858 2276 3483 3854 4690)) :ldur (quote ((511) (418) (511) (372) (836))) :lvel (quote ((85) (115) (85) (40) (0))) :loffset (quote ((0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((nil) (nil) (nil) (nil) (nil)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote (((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t)))))) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quote (((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)) ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)) ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)) ((nil)) ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)) ((nil) (nil) (nil) (nil) (nil) (nil)) ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)) ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)) ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)) ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)) ((nil) (nil) (nil) (nil) (nil) (nil) (nil)) ((nil)) ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)) ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)) ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)) ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)) ((nil) (nil) (nil) (nil) (nil) (nil)) ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)) ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)) ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)) ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)) ((nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil) (nil)) ((nil) (nil) (nil) (nil) (nil))))) (init-mus-color newobj (quote (((4 4 0) (om-make-color 1.0 0.0 0.0))))) (set-extra-pairs newobj (quote (((0 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((0 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((0 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((1 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((1 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((2 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((2 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((3 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((3 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((4 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((4 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((5 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((5 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((6 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((6 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((7 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((7 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((8 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((8 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((9 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((9 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((10 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((10 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((11 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((11 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((12 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((12 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((13 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((13 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((14 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((14 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((15 12 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((15 12 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((16 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((16 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((17 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((17 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((18 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((18 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((19 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((19 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 10 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 10 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((20 11 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((20 11 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 5 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 5 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 6 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 6 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 7 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 7 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 8 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 8 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((21 9 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((21 9 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 0 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 0 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 1 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 1 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 2 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 2 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 3 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 3 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t))) ((22 4 0) (if (find-class (quote vel-extra) nil) (make-instance (quote vel-extra) :deltax 0 :deltay 0 :dynamics nil :from-file t))) ((22 4 0) (if (find-class (quote head-extra) nil) (make-instance (quote head-extra) :thehead "n" :from-file t)))))) (set-patch-pairs newobj (quote ((nil (om-load-patch-abs1 "patch" (quote nil) (quote nil) 7.04 nil "" (om-make-point 200 200) (om-make-point 400 500)))))) (set-name newobj nil) (set-tonalite newobj nil) newobj)) "x" nil (pairlis (quote (measure onset scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list 1 0 nil (quote t) (quote :normal) 0 0 (om-make-point 0 0) (om-make-point 1117 1365) 0 1000 nil 213/100 (quote :midi-player) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (list (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g)) 16 2)) t nil nil t (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((2 0 1 0 nil 0) (12 0 3 0 nil 0) (4 0 5 0 nil 0) (26 0 5 1 nil 0) (7 0 6 0 nil 0) (15 0 6 1 nil 0) (0 0 12 3 nil 0) (20 0 15 0 nil 0) (18 0 15 1 nil 0) (17 0 15 2 nil 0) (12 0 15 3 nil 0) (16 0 17 3 nil 0) (14 0 18 1 nil 0) (13 0 20 2 nil 0) (19 0 20 3 nil 0) (25 0 21 0 nil 0) (25 0 22 0 nil 0) (25 0 23 0 nil 0) (15 0 23 1 nil 0) (26 0 25 0 nil 0) (28 1 26 0 nil 0))) nil 7.04))
